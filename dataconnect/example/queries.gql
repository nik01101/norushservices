mutation CreateUser @auth(level: USER) {
  user_insert(data: {
    displayName: "New User",
    email: "newuser@example.com",
    role: "member"
  })
}

query ListServices @auth(level: PUBLIC) {
  services {
    id
    name
    description
    basePrice
    estimatedDurationMinutes
  }
}

mutation BookAppointment($availabilitySlotId: UUID!, $providerServiceId: UUID!, $customerAddress: String!, $notes: String!) @auth(level: USER) {
  booking_insert(data: {
    availabilitySlotId: $availabilitySlotId,
    providerServiceId: $providerServiceId,
    customerAddress: $customerAddress,
    notes: $notes,
    bookingTime_expr: "request.time",
    customerId_expr: "auth.uid",
    providerId_expr: "???",
    status: "pending",
    totalPrice: 99.99
  })
}

query GetMyBookings @auth(level: USER) {
  bookings(where: {
    customerId: {
      eq_expr: "auth.uid"
    }
  }) {
    id
    bookingTime
    customerAddress
    notes
    status
    totalPrice
    providerService {
      service {
        name
        description
      }
    }
    availabilitySlot {
      startTime
      endTime
    }
  }
}